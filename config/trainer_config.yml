# Training Configuration
trainer:

  Random_forest:
    train: True  # Train the model or not
    parameters:
       n_estimators: 400
       min_samples_leaf: 5
       min_samples_split: 2
       class_weight: {0: 0.2, 1: 0.8}
       bootstrap: True
       n_jobs: -1  
    Randomized_Search: False # Use grid search or not

  Logistic_Regression:
    train: True 
    parameters:
      C: 0.1
      class_weight:  {0: 0.25, 1: 0.75}
      max_iter: 900
      penalty: 'l2'
      solver: 'sag'
    grid_search: False
 
  Neural_Network:
    train: True
    parameters:
      hidden_layer_sizes: (128, 64)
      activation: 'tanh'
      solver: 'sgd'
      alpha: 0.01
      learning_rate_init: 0.1
      batch_size: 512
      max_iter: 500
    Randomized_Search: False

  Voting_Classifier: # Voting Classifier (MLP, Random Forest, Logistic Regression)
    train: True
    parameters:
      voting: 'soft'
      weights: [1, 4, 2]
      fit_base_estimators: False
      use_clones: False

# Evaluation
evaluation:
  train: True # Save model training results and plots
  validation: True # Save model validation results and plots
  optimal_threshold: True # We use only training data to find optimal threshold

  metric: # Evaluation metrics we interested in
   pos:
      f1-score: True
      precision: True
      recall: True
   neg:    
      f1-score: False
      precision: False
      recall: False
   PR_AUC: True
   macro_avg: True

  # Plots to save in the evaluation folder
  roc_curve: True
  confusion_matrix: True
  precision_recall_threshold: True  
  path: 'evaluation/'
  plot_path: 'evaluation/plots/'
   


